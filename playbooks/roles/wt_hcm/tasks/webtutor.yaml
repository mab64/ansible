---
## Prepare webtutor image to run

# - name: Upack image tar
#   unarchive:
#     src: /mnt/parent/D/Soft/hcm_2022.1.3.441.tar.gz
#     dest: /tmp

- name: include local specific variables
  ansible.builtin.include_vars: 
    file: .main


- name: Checking if image {{ img_name }} exists  # Inspect image
  community.docker.docker_image_info:
    name: "{{ img_name }}"
  register: img

# - debug:
#     msg: "Result: {{ img }}"

# - name: Checking image exists locally
#   ansible.builtin.assert:
#     that:
#       - result.images | length == 1

- name: Checking if image tar {{ img_file_dst_dir }}/{{ img_file_basename }}.tar exists
  stat:
    path: "{{ img_file_dst_dir }}/{{ img_file_basename }}.tar"
  register: img_tar
  when: "img.images | length == 0"

# - debug:
#     msg: "File {{ img_file_dst_dir }}/{{ img_file_basename }}.tar doesn't exists"
#   when: "not img_tar.stat.exists"

- name: Copying image tar.gz if tar doesn't exists
  ansible.builtin.copy:
    src: "{{ img_file_src_dir }}/{{ img_file_basename }}.tar.gz"
    dest: /tmp
    force: no
  when: "(img.images | length == 0) and not img_tar.stat.exists"

- name: Unarchiving image tar from tar.gz
  ansible.builtin.shell:
    cmd: "gunzip -dk {{ img_file_dst_dir }}/{{ img_file_basename }}.tar.gz"
  register: result
  when: "(img.images | length == 0) and not img_tar.stat.exists"

- debug:
    msg: "gunzip result: {{ result.rc }}"
  when: "(img.images | length == 0) and not img_tar.stat.exists"


# - name: Load image from tar file
#   community.docker.docker_image_load:
#     path: "{{ img_file_dst_dir }}/{{ img_file_basename }}.tar"
#   register: result

- name: Loading image from tar file
  community.docker.docker_image:
    name: "{{ img_name }}"
    source: load
    load_path: "{{ img_file_dst_dir }}/{{ img_file_basename }}.tar"
    timeout: 300
  register: result

# - ansible.builtin.debug:
#     msg: "Loaded images: {{ result }}"  #  | join(', ')
