---
- name: Zabbix Agent play
  hosts: all # mon_srv  # zabbix_agents
  gather_facts: true
  vars:
    optional_vars_file: "{{ lookup('first_found', '.zabbix.vars', errors='ignore') }}"
    zabbix_repo_key: "https://repo.zabbix.com/zabbix-official-repo.key"
    # zabbix_repo_rpm: "https://repo.zabbix.com/zabbix/5.0/rhel/8/x86_64/zabbix-release-5.0-1.el8.noarch.rpm"
    zabbix_repo_rpm: "https://repo.zabbix.com/zabbix/6.0/rhel/8/x86_64/zabbix-release-6.0-4.el8.noarch.rpm"
    zabbix_owner: zabbix
    zabbix_agent_conf: "/etc/zabbix/zabbix_agentd.conf"
    zabbix_service: zabbix-agent
    zabbix_server: "127.0.0.1"
    zabbix_tlsaccept: unencrypted,psk
    zabbix_tlspskidentity: PSK001
    zabbix_tlspskfile_src: "./files/.zabbix_psk001"
    zabbix_tlspskfile_dst: /etc/zabbix/psk001
    pskfile: "{{ lookup('first_found', zabbix_tlspskfile_src, errors='ignore') }}"
  # vars_files:  # Reassign vars
  #   - [ ".zabbix.vars", ]

  # roles:
  #   - role: zabbix

  tasks:
    - name: Loading variables from file if exists
      include_vars: "{{ optional_vars_file }}"
      when: optional_vars_file is file

    - name: Printing OS Family
      ansible.builtin.debug:
        # var: ansible_facts['distribution']
        var: ansible_facts['os_family']

    # RedHat
    - name: collect facts about system services
      ansible.builtin.service_facts:
      register: services_state
      when: ansible_facts['os_family'] == "RedHat"

    - name: Allow Zabbix traffic by firewalld
      ansible.posix.firewalld:
        port: 10050/tcp
        permanent: true
        immediate: true
        state: enabled
        # offline: no
      when: ansible_facts['os_family'] == "RedHat" and 
            services_state['ansible_facts']['services']['firewalld.service']['state'] == "running"

    - name: Installing Zabbix repo key
      ansible.builtin.rpm_key:
        key: "{{ zabbix_repo_key }}"
        state: present
      when: ansible_facts['os_family'] == "RedHat"

    - name: Installing Zabbix repo
      ansible.builtin.dnf:
        name: "{{ zabbix_repo_rpm }}"
        state: present
      when: ansible_facts['os_family'] == "RedHat"

    - name: Installing Zabbix agent by dnf
      ansible.builtin.dnf:
        name: zabbix-agent
        state: present
      when: ansible_facts['os_family'] == "RedHat"

    # Debian
    - name: Installing Zabbix agent by apt
      apt:
        name: zabbix-agent
        state: present
      when: ansible_facts['os_family'] in ["Debian", "Astra Linux"]

    # All
    - name: "Configuring Zabbix server(s) IPs"
      ansible.builtin.lineinfile:
        path: "{{ zabbix_agent_conf }}"
        regexp: '^Server *='
        line: "Server={{ zabbix_server }}"
        # backup: yes
      notify: Restarting Zabbix agent

    - name: Copying PSK file
      ansible.builtin.copy:
        src: "{{ zabbix_tlspskfile_src }}"
        dest: "{{ zabbix_tlspskfile_src }}"
        group: "{{ zabbix_owner }}"
        mode: 0640
      # when: pskfile.stat.exists
      when: pskfile is file

    # - name: Checking if PSK file exists
    #   ansible.builtin.stat:
    #     path: "{{ zabbix_tlspskfile_src }}"
    #   register: pskfile
    # - ansible.builtin.debug:
    #     var: zabbix_tlspskfile_src

    - name: "Configuring Zabbix TLSAccept"
      ansible.builtin.lineinfile:
        path: "{{ zabbix_agent_conf }}"
        regexp: '^TLSAccept *='
        line: "TLSAccept={{ zabbix_tlsaccept }}"
        insertafter: '^# *TLSAccept'
        # backup: yes
      # when: pskfile.stat.exists
      when: pskfile is file
      notify: Restarting Zabbix agent

    - name: "Configuring Zabbix TLSPSKIdentity"
      ansible.builtin.lineinfile:
        path: "{{ zabbix_agent_conf }}"
        regexp: '^TLSPSKIdentity *='
        line: "TLSPSKIdentity={{ zabbix_tlspskidentity }}"
        insertafter: '^# *TLSPSKIdentity'
        # backup: yes
      # when: pskfile.stat.exists
      when: pskfile is file
      notify: Restarting Zabbix agent

    - name: "Configuring Zabbix TLSPSKFile"
      ansible.builtin.lineinfile:
        path: "{{ zabbix_agent_conf }}"
        regexp: '^TLSPSKFile *='
        line: "TLSPSKFile={{ zabbix_tlspskfile_dst }}"
        insertafter: '^# *TLSPSKFile'
        # backup: yes
      # when: pskfile.stat.exists
      when: pskfile is file
      notify: Restarting Zabbix agent

  handlers:
    - name: Restarting Zabbix agent
      ansible.builtin.systemd:
        name: "{{ zabbix_service }}"
        state: restarted
        enabled: true
        # daemon_reload: yes
